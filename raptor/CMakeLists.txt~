cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

FIND_PACKAGE( OpenCV REQUIRED )

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#uncomment if you have defined messages
rosbuild_genmsg()
#uncomment if you have defined services
rosbuild_gensrv()

rosbuild_add_executable(raptor_mcom 			src/raptor_mcom.cpp)
rosbuild_add_executable(raptor_mcom_testbench 		src/raptor_mcom_testbench.cpp)
rosbuild_add_executable(raptor_waypointer 		src/raptor_waypointer.cpp)
rosbuild_add_executable(raptor_waypointer_testbench 	src/raptor_waypointer_testbench.cpp)
rosbuild_add_executable(raptor_drive_testbench 		src/raptor_drive_testbench.cpp)
rosbuild_add_executable(raptor_find_dark 		src/raptor_find_dark.cpp)
rosbuild_add_executable(raptor_stalk			src/raptor_stalk.cpp)
rosbuild_add_executable(raptor_generic_ip 		src/raptor_generic_ip.cpp)
rosbuild_add_executable(raptor_ml			src/raptor_ml.cpp)
rosbuild_add_executable(ip_test				src/ip_test.cpp)
rosbuild_add_executable(raptor_relmove			src/raptor_relmove.cpp)
#common commands for building c++ executables and libraries
#rosbuild_add_library(${PROJECT_NAME} include/blob/blob.cpp)
target_link_libraries(raptor_stalk 	libblob.a)
target_link_libraries(raptor_generic_ip libblob.a)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})
