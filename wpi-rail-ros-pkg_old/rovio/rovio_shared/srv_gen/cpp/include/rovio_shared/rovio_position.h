/* Auto-generated by genmsg_cpp for file /home/dev/cs7630_robotics/wpi-rail-ros-pkg_old/rovio/rovio_shared/srv/rovio_position.srv */
#ifndef ROVIO_SHARED_SERVICE_ROVIO_POSITION_H
#define ROVIO_SHARED_SERVICE_ROVIO_POSITION_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace rovio_shared
{
template <class ContainerAllocator>
struct rovio_positionRequest_ {
  typedef rovio_positionRequest_<ContainerAllocator> Type;

  rovio_positionRequest_()
  {
  }

  rovio_positionRequest_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "rovio_shared/rovio_positionRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "7be1f10596b0f5e8fdacfae4637f8191"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::rovio_shared::rovio_positionRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rovio_shared::rovio_positionRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct rovio_positionRequest
typedef  ::rovio_shared::rovio_positionRequest_<std::allocator<void> > rovio_positionRequest;

typedef boost::shared_ptr< ::rovio_shared::rovio_positionRequest> rovio_positionRequestPtr;
typedef boost::shared_ptr< ::rovio_shared::rovio_positionRequest const> rovio_positionRequestConstPtr;


template <class ContainerAllocator>
struct rovio_positionResponse_ {
  typedef rovio_positionResponse_<ContainerAllocator> Type;

  rovio_positionResponse_()
  : x(0)
  , y(0)
  , theta(0.0)
  , is_valid(0)
  {
  }

  rovio_positionResponse_(const ContainerAllocator& _alloc)
  : x(0)
  , y(0)
  , theta(0.0)
  , is_valid(0)
  {
  }

  typedef int16_t _x_type;
  int16_t x;

  typedef int16_t _y_type;
  int16_t y;

  typedef float _theta_type;
  float theta;

  typedef int32_t _is_valid_type;
  int32_t is_valid;


private:
  static const char* __s_getDataType_() { return "rovio_shared/rovio_positionResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "7be1f10596b0f5e8fdacfae4637f8191"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "7be1f10596b0f5e8fdacfae4637f8191"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int16 	x\n\
int16 	y\n\
float32 theta\n\
int32 is_valid\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, x);
    ros::serialization::serialize(stream, y);
    ros::serialization::serialize(stream, theta);
    ros::serialization::serialize(stream, is_valid);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, x);
    ros::serialization::deserialize(stream, y);
    ros::serialization::deserialize(stream, theta);
    ros::serialization::deserialize(stream, is_valid);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(x);
    size += ros::serialization::serializationLength(y);
    size += ros::serialization::serializationLength(theta);
    size += ros::serialization::serializationLength(is_valid);
    return size;
  }

  typedef boost::shared_ptr< ::rovio_shared::rovio_positionResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rovio_shared::rovio_positionResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct rovio_positionResponse
typedef  ::rovio_shared::rovio_positionResponse_<std::allocator<void> > rovio_positionResponse;

typedef boost::shared_ptr< ::rovio_shared::rovio_positionResponse> rovio_positionResponsePtr;
typedef boost::shared_ptr< ::rovio_shared::rovio_positionResponse const> rovio_positionResponseConstPtr;

struct rovio_position
{

typedef rovio_positionRequest Request;
typedef rovio_positionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct rovio_position
} // namespace rovio_shared

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::rovio_shared::rovio_positionRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::rovio_shared::rovio_positionRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::rovio_shared::rovio_positionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::rovio_shared::rovio_positionRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::rovio_shared::rovio_positionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rovio_shared/rovio_positionRequest";
  }

  static const char* value(const  ::rovio_shared::rovio_positionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::rovio_shared::rovio_positionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::rovio_shared::rovio_positionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::rovio_shared::rovio_positionRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::rovio_shared::rovio_positionResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::rovio_shared::rovio_positionResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::rovio_shared::rovio_positionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "7be1f10596b0f5e8fdacfae4637f8191";
  }

  static const char* value(const  ::rovio_shared::rovio_positionResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x7be1f10596b0f5e8ULL;
  static const uint64_t static_value2 = 0xfdacfae4637f8191ULL;
};

template<class ContainerAllocator>
struct DataType< ::rovio_shared::rovio_positionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rovio_shared/rovio_positionResponse";
  }

  static const char* value(const  ::rovio_shared::rovio_positionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::rovio_shared::rovio_positionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int16 	x\n\
int16 	y\n\
float32 theta\n\
int32 is_valid\n\
\n\
";
  }

  static const char* value(const  ::rovio_shared::rovio_positionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::rovio_shared::rovio_positionResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::rovio_shared::rovio_positionRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct rovio_positionRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::rovio_shared::rovio_positionResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.x);
    stream.next(m.y);
    stream.next(m.theta);
    stream.next(m.is_valid);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct rovio_positionResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<rovio_shared::rovio_position> {
  static const char* value() 
  {
    return "7be1f10596b0f5e8fdacfae4637f8191";
  }

  static const char* value(const rovio_shared::rovio_position&) { return value(); } 
};

template<>
struct DataType<rovio_shared::rovio_position> {
  static const char* value() 
  {
    return "rovio_shared/rovio_position";
  }

  static const char* value(const rovio_shared::rovio_position&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<rovio_shared::rovio_positionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "7be1f10596b0f5e8fdacfae4637f8191";
  }

  static const char* value(const rovio_shared::rovio_positionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<rovio_shared::rovio_positionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rovio_shared/rovio_position";
  }

  static const char* value(const rovio_shared::rovio_positionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<rovio_shared::rovio_positionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "7be1f10596b0f5e8fdacfae4637f8191";
  }

  static const char* value(const rovio_shared::rovio_positionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<rovio_shared::rovio_positionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rovio_shared/rovio_position";
  }

  static const char* value(const rovio_shared::rovio_positionResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ROVIO_SHARED_SERVICE_ROVIO_POSITION_H

